{"version":3,"sources":["components/PetForm.js","components/AllPets.js","views/Home.js","views/Navbar.js","components/OnePet.js","components/Update.js","App.js","reportWebVitals.js","index.js"],"names":["PetForm","props","useState","name","setName","petType","setPetType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","className","onSubmit","e","preventDefault","newPet","axios","post","then","res","console","log","data","navigate","catch","err","message","type","placeholder","onChange","target","value","style","color","rows","cols","AllPets","pets","shelter","setShelter","filterPets","useEffect","onClick","map","pet","_id","to","Home","setPets","allTypes","Set","get","sortedPets","filter","Navbar","OnePet","setPet","id","adoptPet","delete","removeFromDom","Update","updatedPet","put","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eebec5e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst PetForm = (props) => {\n    const [name, setName] = useState('')\n    const [petType, setPetType] = useState('')\n    const [description, setDescription] = useState('')\n    const [skillOne, setSkillOne] = useState('')\n    const [skillTwo, setSkillTwo] = useState('')\n    const [skillThree, setSkillThree] = useState('')\n    const [errors, setErrors] = useState({})\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newPet = { name, petType, description, skillOne, skillTwo, skillThree }\n        axios.post('http://localhost:8000/api/pets', newPet)\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                }\n                else {\n                    navigate('/')\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        <div className=\"col-sm-3 \">\n            <form onSubmit={onSubmitHandler}>\n                <div className=\"form-group\">\n                    {errors.name ? <p className=\"text-danger\">{errors.name.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Pet Name...\"\n                        onChange={e => setName(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.petType ? <p className=\"text-danger\">{errors.petType.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Pet Type...\"\n                        onChange={e => setPetType(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.description ? <p style={{ color: 'red' }}>{errors.description.message}</p> : \"\"}\n                    <textarea\n                        rows=\"4\"\n                        cols=\"30\"\n                        className=\"form-control\"\n                        placeholder=\"Pet Decription...\"\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </div>\n                <p>Skills (optional)</p>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Skill 1...\"\n                        onChange={e => setSkillOne(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Skill 2...\"\n                        onChange={e => setSkillTwo(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Skill 3...\"\n                        onChange={e => setSkillThree(e.target.value)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Add Pet\" />\n            </form>\n        </div>\n    )\n}\n\nexport default PetForm","import React, { useState, useEffect } from 'react'\nimport { Link, navigate } from '@reach/router';\n\n\n// function bubble(arr, key) {\n//     for (let i = 0; i < arr.length; i++) {\n//         for (let j = 0; j < arr.length - i - 1; j++) {\n//             if (arr[j][key] > arr[j + 1][key]) {\n//                 [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n//             }\n//         }\n//     }\n// }\n\nconst AllPets = (props) => {\n    const [shelter, setShelter] = useState(props.pets)\n    const [pets, setPets] = useState([])\n    const {filterPets, petType}= props;\n\n\n    useEffect(() => {\n        setShelter(props.pets);\n    }, [props.pets]);\n\n    return (\n        <div>\n            <h1>These pets are looking for a new home</h1>\n\n            <button value ='fish' className=\"btn btn-sm btn-info\" onClick={()=>filterPets('Fish')}>Fish</button>\n            <button value ='cat' className=\"btn btn-sm btn-info\"onClick={()=>filterPets('Kitty')} >Cat</button>\n            <button value ='bird' className=\"btn btn-sm btn-info\" onClick={()=>filterPets('Bird')}>Bird</button>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {shelter.map((pet, _id) => {\n                        return (\n                            <tr key={pet._id}>\n                                <td>{pet.name}</td>\n                                <td>{pet.petType}</td>\n                                <td>\n                                    <Link to={`/pets/${pet._id}`}>\n                                        <button className=\"btn btn-success\">Details</button>\n                                    </Link>{' '}\n                                    <Link to={`/pets/${pet._id}/edit`}>\n                                        <button className=\"btn btn-warning\">Edit</button>\n                                    </Link>\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default AllPets","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport AllPets from '../components/AllPets';\n\n\n\n    \n\nconst Home = (props) => {\n    const [pets, setPets] = useState([])\n    const[petType, setPetType]= useState([]);\n\n    const allTypes = new Set(pets.map((pet)=>pet.petType)) ;\n    console.log(allTypes);\n    \n\n    const filterPets = (petType) =>{\n\n        const sortedPets = pets.filter((pet)=>pet.petType === petType)\n        console.log(petType)\n\n        setPets(sortedPets);\n    };\n\n    // filterPets={filterPets}\n\n    //FilteringButton\n    // const handleBtns =(e)=>{\n    //     console.log(e.target.value)\n    //     if(e.target.value='all'){\n    //         setPetType(pets)\n    //     }\n    //     else{\n    //         const sortedPets = pets.filter((pet)=>pet.petType === petType)\n    //     }\n\n    // }\n\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pets')\n            .then(res => setPets(res.data))\n\n    }, [])\n\n\n    return (\n        <div>\n            <AllPets pets={pets} petType ={petType} filterPets={filterPets}/>\n        </div>\n    )\n}\n\nexport default Home;","\nimport React from 'react'\nimport { Link } from '@reach/router'\n\n\nconst Navbar = () => {\n    return (\n        <div>\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/' style={{ color: 'white' }}>Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to='/new' style={{ color: 'white' }}>Add</Link>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst OnePet = (props) => {\n    const [pets, setPets] = useState([])\n    const [pet, setPet] = useState({})\n\n\n    \n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${props.id}`)\n            .then(res => { setPet({ ...res.data }) })\n        // eslint-disable-next-line\n    }, [props])\n    const removeFromDom = _id => {\n        setPets(pets.filter(pet => pet._id !== _id));\n    }\n\n\n\n    const adoptPet = (_id) => {\n        axios.delete(`http://localhost:8000/api/pets/${_id}`)\n            .then(res => {\n                console.log(res)\n                removeFromDom(_id)\n                navigate('/')\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n\n    return (\n\n        <div className=\"col-sm-4 mb-3\">\n\n            <div className=\"card text-white bg-secondary mb-3\">\n                <div className=\"card-header\">Details about: {pet.name}</div>\n                <div className=\"card-body\">\n                    <p className=\"card-text\"><em>Type: {pet.petType}</em></p>\n                    <p className=\"card-text\">Description: {pet.description}</p>\n                    <p className=\"card-text\">Skills:</p>\n\n                    <ul className=\"card-text\">\n                        <li>{pet.skillOne}</li>\n                        <li>{pet.skillTwo}</li>\n                        <li>{pet.skillThree}</li>\n                    </ul>\n                </div>\n                <div className=\"card-footer\">\n                    <button className=\"btn btn-info\" onClick={(e) => { adoptPet(pet._id) }}>Adopt</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default OnePet","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { navigate } from '@reach/router'\n\nconst Update = (props) => {\n    const { id } = props\n    const [name, setName] = useState('')\n    const [petType, setPetType] = useState('')\n    const [description, setDescription] = useState('')\n    const [skillOne, setSkillOne] = useState('')\n    const [skillTwo, setSkillTwo] = useState('')\n    const [skillThree, setSkillThree] = useState('')\n    const [errors, setErrors] = useState({})\n\n    \n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(res => {\n                setName(res.data.name);\n                setDescription(res.data.description);\n                setPetType(res.data.petType);\n                setSkillOne(res.data.skillOne);\n                setSkillTwo(res.data.skillTwo);\n                setSkillThree(res.data.skillThree);\n            })\n        // eslint-disable-next-line\n    }, [props])\n\n\n    const updatePet = (e) => {\n        e.preventDefault();\n        const updatedPet = { name, petType, description, skillOne, skillTwo, skillThree }\n        axios.put(`http://localhost:8000/api/pets/${id}`, updatedPet)\n            .then(res => {\n                console.log(res)\n                if (res.data.errors) {\n                    setErrors(res.data.errors)\n                } else {\n                    navigate(`/pets/${id}`)\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    return (\n        <div className=\"col-sm-3 \">\n            <form onSubmit={updatePet}>\n                <div className=\"form-group\">\n                    {errors.name ? <p className=\"text-danger\">{errors.name.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.petType ? <p className=\"text-danger\">{errors.petType.message}</p> : ''}\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={petType}\n                        onChange={e => setPetType(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    {errors.description ? <p style={{ color: 'red' }}>{errors.description.message}</p> : \"\"}\n                    <textarea\n                        rows=\"4\"\n                        cols=\"30\"\n                        className=\"form-control\"\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </div>\n                <p>Skills (optional)</p>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={skillOne}\n                        onChange={e => setSkillOne(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={skillTwo}\n                        onChange={e => setSkillTwo(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={skillThree}\n                        onChange={e => setSkillThree(e.target.value)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Update\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Update","\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/slate/bootstrap.min.css';\nimport './App.css';\nimport { Router } from '@reach/router';\nimport PetForm from './components/PetForm';\nimport Home from './views/Home';\nimport Navbar from './views/Navbar';\nimport OnePet from './components/OnePet';\nimport Update from './components/Update';\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Router>\n        <Home path='/' />\n        <PetForm path='/new' />\n        <OnePet path='/pets/:id' />\n        <Update path='/pets/:id/edit' />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}